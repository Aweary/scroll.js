{"name":"Scroll.js","tagline":"scroll.js is a small utility that allows you to Tween animations between scroll states. It utilizes the GSAP animation library.","body":"# Installation\r\n\r\nUse Bower to install scroll.js.\r\n\r\n`bower install --save scroll.js`\r\n\r\n# Usage\r\n\r\nCreate a scrollJS object using the `ScrollJS` function.\r\n\r\n```js\r\nvar elementToTween = new ScrollJS(selector, options);\r\n```\r\n\r\n`selector` is a CSS3 selector and uses `querySelector` to find the corresponding DOM element.\r\n`options` is an optional object containing overrides for the default configuration options. The\r\nsettings available are:\r\n\r\n##### `persist`\r\nDefault is set to true. If false, the animation will only complete one cycle. After the window\r\nhas been scroll to or past the largest offset value provided the element is removed from\r\nthe list of  tween objects and will no longer be queried in anyway.\r\n\r\n\r\n#Documentation\r\n\r\n### `at`\r\nExample:\r\n`elementToTween.at(scrollPosition, scrollState);`\r\n\r\n###### Description:\r\n   `at` is the only method scrollJS uses. It takes the scroll position (`pageYOffset`) and the scroll state (an object with properties to tween).\r\n    At the moment the first `at` call should set the state at scroll position 0. You can chain as many scroll states together as you'd like.\r\n\r\n   This potential real-world example would set your logo to `-400` on the `x-axis`, and the `opacity` to `0`. Scrolling from 0 to 100 would fade and slide\r\n    the logo over to position `0` on the `x-axis`, while also moving it `200` up the `y-axis`.\r\n```js\r\n var logo = new ScrollJS('.logo');\r\n logo.at(0, {x: -400, y: 0,  opacity: 0});\r\n logo.at(100, {x: 0, y: 200, opacity: 1});\r\n```\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}